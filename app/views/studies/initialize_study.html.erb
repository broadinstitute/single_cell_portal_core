<h1>Upload/Edit Study Data for '<%= @study.name %>' <%= render partial: 'initialize_study_label' %></h1>

<div id="rootwizard">
	<ul class="nav wizard">
    <li role="presentation" class="wizard-nav" id="initialize_expression_form_nav"><a href="#expression" data-toggle="tab">1. Expression Matrix <span id="initialize_expression_form_nav_completed"></span></a></li>
		<li role="presentation" class="wizard-nav" id="initialize_ordinations_form_nav"><a href="#ordinations" data-toggle="tab">2. Clusters <span id="initialize_ordinations_form_nav_completed"></span></a></li>
		<li role="presentation" class="wizard-nav" id="initialize_fastq_form_nav"><a href="#fastq" data-toggle="tab">3. Fastq Data <span id="initialize_fastq_form_nav_completed"></span></a></li>
    <li role="presentation" class="wizard-nav" id="initialize_marker_genes_form_nav"><a href="#marker-genes" data-toggle="tab">4. Gene Lists <span id="initialize_marker_genes_form_nav_completed"></span></a></li>
		<li role="presentation" class="wizard-nav" id="initialize_misc_form_nav"><a href="#misc" data-toggle="tab">5. Miscellaneous <span id="initialize_misc_form_nav_completed"></span></a></li>
	</ul>

	<div id="bar" class="progress">
		<div class="progress-bar"><span id="progress-count"></span></div>
	</div>
	<div class="tab-content">
    <div class="tab-pane" id="expression">
      <div class="well well-sm">
        <h2>Step 1. Upload Expression Matrix File <small class="initialize-label" id="initialize_expression_form_completed"><span class="label label-danger">Required</span></small></h2>
        <p class="lead">Upload a tab- or comma-delimited text file containing all of your gene expression scores for all genes and single cells.  The file must be a plain text (.txt) file with with a header row containing the value '<strong>GENE</strong>' in the first column, and single cell names in each successive column.</p>
        <p><%= link_to "Example Expression Matrix <span class='fa fa-download'></span>".html_safe, '/single_cell/example_data/expression_matrix_example.txt', class: 'btn btn-default', download: 'expression_matrix_example.txt' %></p>
      </div>
      <%= render partial: 'initialize_expression_form', locals: {study_file: @expression_file} %>
    </div>
		<div class="tab-pane" id="ordinations">
			<div id="ordinations-target">
				<div class="well well-sm">
					<h2>Step 2. Upload Cluster File <small class="initialize-label" id="initialize_ordinations_form_completed"><span class="label label-danger">Required</span></small></h2>
					<p class="lead">Upload a tab- or comma-delimited text file containing any cluster ordinations and optional cluster-specific metadata.  The file must be a plain text (.txt) file with at least 3 columns and a header row containing the values '<strong>NAME</strong>', '<strong>X</strong>', and '<strong>Y</strong>', and a second row with the header of '<strong>TYPE</strong>' to declare metadata types (see below). The file may have an optional column of '<strong>Z</strong>' (for 3d clusters) and an arbitrary number of columns containing cell-level metadata specific to this cluster.  The column headers for metadata will be used as display names in dropdown menus.</p>
          <h3>Metadata Columns</h3>
          <p class="lead">The second row in this file (beginning with the header 'TYPE') must contain a value for each coordinate or metadata column declaring its datatype.  The two accepted values are <strong>group</strong> (set membership) or <strong>numeric</strong> (continuous scores).  The values for the 'X', 'Y', and 'Z' columns must be set to 'numeric'.  Group values are treated as literal strings, and numerics as floating-point numbers.</p>
					<p><%= link_to "Example Cluster File <span class='fa fa-download'></span>".html_safe, '/single_cell/example_data/cluster_coordinates_example.txt', class: 'btn btn-default', download: 'cluster_coordinates_example.txt' %></p>
				</div>
				<% @cluster_ordinations.each do |study_file| %>
					<%= render partial: 'initialize_ordinations_form', locals: {study_file: study_file} %>
				<% end %>
				<script type="text/javascript">
					if (<%= !@cluster_ordinations.first.new_record? %>) {
						completeWizardStep('initialize_ordinations_form_nav');
						console.log('incrementing status for cluster ordinations upload');
						$('#initialize_ordinations_form_completed').replaceWith("<%= escape_javascript(render partial: 'step_completed', locals: {id: 'initialize_ordinations_form_completed'}) %>");
						$('#initialize_ordinations_form_nav_completed').html("<span class='fa fa-check text-success'></span>");
					}
				</script>
			</div>
			<p><%= link_to "<span class='fa fa-plus'></span> Add a Cluster File".html_safe, new_study_file_study_path(@study._id, file_type: 'Cluster Ordinations', target: '#ordinations-target', form: 'initialize_ordinations_form'), class: 'btn btn-sm btn-primary', 'data-remote' => true %></p>
		</div>
    <div class="tab-pane" id="fastq">
      <div id="fastq-target">
        <div class="well well-sm">
          <h2>Step 3. Upload Fastq Files <small class="initialize-label" id="initialize_fastq_form_completed"><span class="label label-info">Optional</span></small></h2>
          <p class="lead">Upload any non-primary human fastq data files <strong>under 80GB in size</strong>.  If your data is primary human data, or over 80GB, you can link to it here by selecting 'Yes' in the 'Primary Human Data / Over 80GB' field and then entering the URL in the corresponding text box.<br /><strong class="text-danger">If you are uploading fastq files, they must be compressed first using gzip.</strong></p>
          <p class="lead">For more help uploading files, please refer to our <%= link_to 'wiki', 'https://github.com/broadinstitute/single_cell_portal/wiki/Uploading-Data' %>.</p>
          <p><%= link_to "FASTQ File Format <span class='fa fa-info-circle'></span>".html_safe, 'https://en.wikipedia.org/wiki/FASTQ_format#Format', class: 'btn btn-default' %>&nbsp;<%= link_to "gzip Documentation <span class='fa fa-info-circle'></span>".html_safe, 'http://www.gnu.org/software/gzip/manual/gzip.html', class: 'btn btn-default' %></p>
        </div>
        <% @fastq_files.each do |study_file| %>
          <%= render partial: 'initialize_fastq_form', locals: {study_file: study_file} %>
        <% end %>
        <script type="text/javascript">
          if (<%= !@fastq_files.first.new_record? %>) {
            completeWizardStep('initialize_fastq_form_nav');
            console.log('incrementing status for fastq upload');
            $('#initialize_fastq_form_completed').replaceWith("<%= escape_javascript(render partial: 'step_completed', locals: {id: 'initialize_fastq_form_completed'}) %>");
            $('#initialize_fastq_form_nav_completed').html("<span class='fa fa-check text-success'></span>");
          }
        </script>
      </div>
      <p><%= link_to "<span class='fa fa-plus'></span> Add a Fastq File".html_safe, new_study_file_study_path(@study._id, file_type: 'Fastq', target: '#fastq-target', form: 'initialize_fastq_form'), class: 'btn btn-sm btn-primary', 'data-remote' => true %></p>

    </div>
		<div class="tab-pane" id="marker-genes">
			<div id="marker-genes-target">
				<div class="well well-sm">
					<h2>Step 4. Upload Gene List File <small class="initialize-label" id="initialize_marker_genes_form_completed"><span class="label label-info">Optional</span></small></h2>
					<p class="lead">Upload a tab- or comma-delimited text file containing a list of genes and their mean expression values across any clusters.  The file must be a plain text (.txt) with the value 'GENE NAMES' in the first column, and cluster names in each successive column.</p>
					<p><%= link_to "Example Gene List <span class='fa fa-download'></span>".html_safe, '/single_cell/example_data/gene_list_example.txt', class: 'btn btn-default', download: 'marker_gene_list_example.txt' %></p>
				</div>
				<% @marker_lists.each do |study_file| %>
					<%= render partial: 'initialize_marker_genes_form', locals: {study_file: study_file} %>
				<% end %>
				<script type="text/javascript">
					if (<%= !@marker_lists.first.new_record? %>) {
						completeWizardStep('initialize_marker_genes_form_nav');
						console.log('incrementing status for marker gene upload');
						$('#initialize_marker_genes_form_completed').replaceWith("<%= escape_javascript(render partial: 'step_completed', locals: {id: 'initialize_marker_genes_form_completed'}) %>");
						$('#initialize_marker_genes_form_nav_completed').html("<span class='fa fa-check text-success'></span>");
					}
				</script>
			</div>
			<p><%= link_to "<span class='fa fa-plus'></span> Add a Gene List File".html_safe, new_study_file_study_path(@study._id, file_type: 'Gene List', target: '#marker-genes-target', form: 'initialize_marker_genes_form'), class: 'btn btn-sm btn-primary', 'data-remote' => true %></p>

		</div>
		<div class="tab-pane" id="misc">
			<div id="misc-target">
				<div class="well well-sm">
					<h2>Step 5. Upload Documentation/Other Files <small class="initialize-label" id="initialize_misc_form_completed"><span class="label label-info">Optional</span></small></h2>
					<p class="lead">Upload any documentation or other support files you have.</p>
				</div>
				<% @other_files.each do |study_file| %>
					<%= render partial: 'initialize_misc_form', locals: {study_file: study_file} %>
				<% end %>
				<script type="text/javascript">
					if (<%= !@other_files.first.new_record? %>) {
						completeWizardStep('initialize_misc_form_nav');
						console.log('incrementing status for other upload');
						$('#initialize_misc_form_completed').replaceWith("<%= escape_javascript(render partial: 'step_completed', locals: {id: 'initialize_misc_form_completed'}) %>");
						$('#initialize_misc_form_nav_completed').html("<span class='fa fa-check text-success'></span>");
					}
				</script>
			</div>
			<p><%= link_to "<span class='fa fa-plus'></span> Add a Study File".html_safe, new_study_file_study_path(@study._id, file_type: 'Documentation',  target: '#misc-target', form: 'initialize_misc_form'), class: 'btn btn-sm btn-primary', 'data-remote' => true %></p>

		</div>
		<ul class="pager wizard">
			<li class="previous"><a href="#" id="prev-btn">Previous</a></li>
			<li class="next"><a href="#" id="next-btn">Next</a></li>
			<li class="next finish" style="display:none;"><%= link_to "Finish", study_path(@study), id: 'finish-btn' %></li>
		</ul>
	</div>
</div>
<%= render partial: '/layouts/download_helper' %>
<div id="study-files-notice-target"></div>
<%= render 'fileupload_templates' %>
<%= render 'required_modal' %>

<script>
	$(document).ready(function() {
		var wizard = $('#rootwizard');
		var requiredDialogShow = false;
		wizard.bootstrapWizard({'tabClass': 'nav-tabs',
			onTabShow: function(tab, navigation, index, clickedIndex, clickedTab) {
				var step = $(tab[0]).attr('id');
				var total = navigation.find('li').length;
				var done = getWizardStatus();
				var pctCompleted = Math.round((done/total) * 100);
				$('#bar').find('.progress-bar').css({width:pctCompleted+'%'});
				$('#progress-count').html(pctCompleted+'% Completed');
				// user has finished wizard, show finish button
				if (index > 0) {
					wizard.find('.pager .previous').removeClass('disabled');
				}
				if (step == 'initialize_misc_form_nav') {
					wizard.find('.pager .next').hide();
					wizard.find('.pager .finish').show();
					wizard.find('.pager .finish').removeClass('disabled');
					wizard.find('.pager .finish').addClass('enabled');
					// next step is ready to be done, enable button
				} else {
					wizard.find('.pager .next').show();
				}
			},
			onTabClick: function(tab, navigation, index, clickedIndex, clickedTab) {
				var step = $(tab[0]).attr('id');
				if (showSkipWarning(step) && !requiredDialogShow && !completed[step]) {
					$('#required-modal').modal({show: true, backdrop: 'static'});
					requiredDialogShow = true;
					return true;
				}
			},
			onNext: function(tab, navigation, index) {
				var step = $(tab[0]).attr('id');
				if (showSkipWarning(step) && !requiredDialogShow && !completed[step]) {
					$('#required-modal').modal({show: true, backdrop: 'static'});
					requiredDialogShow = true;
				}
				wizard.find('.pager .previous').removeClass('disabled');
				return true;
			}
		});
	});
</script>