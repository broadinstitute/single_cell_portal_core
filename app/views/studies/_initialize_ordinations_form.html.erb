<%= form_for(study_file, url: update_study_file_study_path(@study._id), html: {id: "ordinations_form_#{study_file._id}", class: "initialize_ordinations_form #{study_file.new_record? ? 'new-cluster-form' : nil}", data: {remote: true}}) do |f| %>
  <%= render partial: 'study_file_errors', locals: {study_file: study_file} %>
  <%= f.hidden_field :study_id, value: params[:id] %>
  <%= f.hidden_field :_id, value: study_file._id %>
  <%= hidden_field_tag :selector, "#ordinations_form_#{study_file._id}" %>
  <%= hidden_field_tag :partial, 'initialize_ordinations_form' %>
  <%= hidden_field_tag :filename_to_upload, '', class: 'filename-to-upload' %>
  <%= f.hidden_field :study_file_bundle_id %>
  <%= f.hidden_field :spatial_cluster_associations, {class: 'hidden spatial_cluster_associations', multiple: true} %>
  <% if User.feature_flag_for_instance(current_user, 'spatial_transcriptomics') %>
    <div class="form-group row">
      <div class="col-sm-4" >
        <%= f.label :is_spatial, 'Coordinate data type: ' %><br/>
        <%= f.label :is_spatial_false, {for: "is_spatial_false_#{study_file._id}"} do %>
          <%= f.radio_button :is_spatial, false, {id: "is_spatial_false_#{study_file._id}", class: "is_spatial_false"}  %>
          Clustering
        <% end %>
        &nbsp;
        <%= f.label :is_spatial_true, {for: "is_spatial_true_#{study_file._id}"} do %>
          <%= f.radio_button :is_spatial, true, {id: "is_spatial_true_#{study_file._id}", class: "is_spatial_true"} %>
          Spatial transcriptomics positions
        <% end %>

      </div>
      <div class="col-sm-8">
        <div class="spatial_associations_select"></div>
      </div>
    </div>
  <% end %>
  <div class="form-group row">
		<div class="col-sm-4">
			<%= f.label :name %><br />
			<%= f.text_field :name, class: 'form-control filename cluster-name', placeholder: 'Please provide a name for this group of ordinations...', autocomplete: 'off' %>
		</div>
		<div class="col-sm-8">
			<%= f.label :description, 'Description/Figure Legend (this will be displayed below cluster)' %><br />
			<%= f.text_field :description, class: 'form-control' %>
		</div>
	</div>
  <div class="form-group row">
    <div class="col-sm-4">
      <%= f.label :x_axis_label, 'X Axis Label' %><br />
      <%= f.text_field :x_axis_label, class: 'form-control' %>
    </div>
    <div class="col-sm-4">
      <%= f.label :y_axis_label, 'Y Axis Label' %><br />
      <%= f.text_field :y_axis_label, class: 'form-control' %>
    </div>
    <div class="col-sm-4">
      <%= f.label :z_axis_label, 'Z Axis Label' %><br />
      <%= f.text_field :z_axis_label, class: 'form-control' %>
    </div>
  </div>
  <div class="form-group row">
    <div class="col-sm-2">
      <%= f.label :x_axis_min, 'X Domain Min' %><br />
      <%= f.number_field :x_axis_min, class: 'form-control' %>
    </div>
    <div class="col-sm-2">
      <%= f.label :x_axis_max, 'X Domain Max' %><br />
      <%= f.number_field :x_axis_max, class: 'form-control' %>
    </div>
    <div class="col-sm-2">
      <%= f.label :y_axis_min, 'Y Domain Min' %><br />
      <%= f.number_field :y_axis_min, class: 'form-control' %>
    </div>
    <div class="col-sm-2">
      <%= f.label :y_axis_max, 'Y Domain Max' %><br />
      <%= f.number_field :y_axis_max, class: 'form-control' %>
    </div>
    <div class="col-sm-2">
      <%= f.label :z_axis_min, 'Z Domain Min' %><br />
      <%= f.number_field :z_axis_min, class: 'form-control' %>
    </div>
    <div class="col-sm-2">
      <%= f.label :z_axis_max, 'Z Domain Max' %><br />
      <%= f.number_field :z_axis_max, class: 'form-control' %>
    </div>
  </div>
	<div class="form-group row">
    <div class="col-sm-4">
      <%= f.label :file_type %><br />
      <%= f.text_field :file_type, readonly: true, class: 'form-control file-type' %>
    </div>
		<div class="col-sm-5 upload-field">
      <% if !study_file.upload_file_name.nil? %>
        <p><label>Link to file </label><br /><%= render partial: '/layouts/download_link', locals: {study: @study, study_file: study_file} %></p>
      <% else %>
        <%= f.label :upload, 'Upload Data File' %><br />
        <%= f.file_field :upload, class: 'btn btn-info fileinput-button cluster-upload upload-clusters' %>
        <%= f.hidden_field :status, value: study_file.new_record? ? 'uploading' : 'uploaded' %>
      <% end %>
		</div>
		<div class="col-sm-3">
			<%= f.label :actions %>
			<div class="row">
				<div class="col-xs-6">
					<%= f.submit 'Save', class: 'btn btn-block btn-success save-study-file', disabled: (study_file.upload_file_name.nil? || study_file.parse_status == 'parsing' ) %>
				</div>
				<div class="col-xs-6">
          <% if study_file.parsing? || study_file.upload_file_name.nil? %>
            <%= link_to 'Delete', '#/', class: 'btn btn-block btn-danger disabled-delete', disabled: 'disabled', title: 'You must wait until the file has finished uploading & parsing before deleting', data: {toggle: 'tooltip'} %>
          <% else %>
					  <%= link_to 'Delete', delete_study_file_study_path(@study._id, study_file._id, target: "#ordinations_form_#{study_file._id}"), method: :delete, class: 'btn btn-block btn-danger delete-file', data: {remote: true} %>
				  <% end %>
        </div>
			</div>
		</div>
	</div>
	<div class="form-group upload-progress">
		<table class="table table-condensed">
			<tbody class="files"></tbody>
		</table>
	</div>
	<script type="text/javascript" nonce="<%= content_security_policy_script_nonce %>">
    console.log("#ordinations_form_<%= study_file._id %>")
    var ordsFormSelector = "#ordinations_form_<%= study_file._id %>"
    $(ordsFormSelector).find('.upload-clusters').click(function() {
        if ($("#ordinations_form_<%= study_file._id %>").find('#study_file_name').val() == '') {
            alert('You must provide a name for this cluster before uploading a file.');
            return false;
        }
    });

    // validate uniqueness of names before submit
    validateUnique(ordsFormSelector, '.cluster-name');

    // sanitize cluster names on change
    $(ordsFormSelector).on('change', '.cluster-name', function() {
        validateName($(this).val(), $(`${ordsFormSelector} .cluster-name`));
    });

    function updateClusterAssnSelect() {
      const clusterAssnTarget = $(`${ordsFormSelector} .spatial_associations_select`)[0]
      const pairedHiddenField = $(`${ordsFormSelector} .spatial_cluster_associations`)[0]
      const isNew = <%= study_file.new_record? %>
      <% opts =  @study.study_files.where(file_type: 'Cluster', is_spatial: false).map {|f| {label: f.name, value: f.id.to_s}}
         current_values = study_file.spatial_cluster_associations.map {|aid| opts.find {|opt| opt[:value] == aid }} %>
      const opts = <%= opts.to_json.html_safe %>
      const current_values = <%= current_values.to_json.html_safe %>
      window.SCP.renderClusterAssociationSelect(clusterAssnTarget, opts, current_values, isNew, pairedHiddenField)
    }

    <% if User.feature_flag_for_instance(current_user, 'react_explore')  %>
      updateClusterAssnSelect()

      $('form').on('change', '.is_spatial_true , .is_spatial_false', function() {
        updateClusterAssnSelect()
      })
    <% end %>

    $(function() {

			$(ordsFormSelector).fileupload({
				url: "<%= upload_study_path(@study._id) %>",
				maxChunkSize: 10000000,
				type: 'PATCH',
				acceptFileTypes: ALLOWED_FILE_TYPES['plainText'],
				add: function (e, data) {
					  fileUploading = true;
					  var that = this;
					  var fileName = data.files[0].name.replace(/ /g, '_');
            $(`${ordsFormSelector} .filename-to-upload`).val(fileName);
            canUpload = validateCandidateUpload(ordsFormSelector, fileName, $('.initialize_ordinations_form .filename-to-upload'));
            if ( canUpload ) {
                $.getJSON("<%= resume_upload_study_path %>", {file: fileName}, function (result) {
                    var file = result.file;
                    if (file == null) {
                        fileUploading = false;
                        $("#study-files-notice-target").html("<%= escape_javascript( render partial: 'studies/study_file_notices', locals: {message: "You have already uploaded this file.  Please select another file."}) %>");
                    } else {
                        data.uploadedBytes = file && file.size;
                        $.blueimp.fileupload.prototype.options.add.call(that, e, data);
                    }
                });
            } else {
                $(`${ordsFormSelector} .filename-to-upload`).val('');
            }
				},
				chunkdone: function(e, data) {
					var perc = parseInt(data.loaded / data.total * 100, 10);
					$(data.context).find('h1').html(perc + "% uploaded");
				},
				done: function(e, data) {
          $('#add-coordinate-label-btn').removeClass('hidden');
          completeWizardStep('initialize_ordinations_form_nav');
					var fileName = data.files[0].name.replace(/ /g, '_');
					// update upload status
					$.ajax({
						  url: "<%= update_status_study_path %>",
						  type: "PATCH",
              dataType: 'script',
						  data: { status: 'uploaded', file: fileName},
              success: function() {
                  fileUploading = false;
                  $.ajax({
                      url: "<%= parse_study_file_study_path(@study._id) %>",
                      type: 'POST',
                      data: {
                          file: fileName,
                          modal_target: '#ordinations-parse-<%= study_file._id %>-modal',
                          partial: 'initialize_ordinations_form',
                          selector: ordsFormSelector
                      },
                      dataType: 'script'
                  });
              }
					});

				},
          fail: function(e, data) {
              if (data.jqXHR != undefined) {
                  if (data.jqXHR.responseJSON != undefined) {
                      alert("An error occurred while uploading this file:\n\n" + data.jqXHR.responseJSON.file.errors + "\n\nThis file will be removed once you close this dialog.");
                  }
                  data.jqXHR.abort();
              }
              fileUploading = false;
              console.log('Aborting upload on study_file: <%= study_file.id %>');
              launchModalSpinner('#delete-modal-spinner','#delete-modal', function() {
                  $.ajax({
                      url: "<%= delete_study_file_study_path(@study._id, study_file._id, target: "#ordinations_form_#{study_file._id}") %>",
                      type: 'DELETE',
                      dataType: 'script'
                  });
              });

          }
			});
		});

	</script>

<% end %>
