<%#
This code renders:
* "Distribution" tab plot shown by default for single-gene search in Study Overview.

See also: _expression_plots_plotly.js.erb, which renders the "Scatter" tab that is
hidden by default.
%>

var distributionPlotType = '<%= @values_box_type %>';
var plotEvent = window.SCP.startPendingEvent(`plot:${distributionPlotType}`, window.SCP.getLogPlotProps());

// check render status
console.log('render status of box plot at start: ' + $('#expression-plots').data('box-rendered'));
console.log('render status of scatter plot at start: ' + $('#expression-plots').data('scatter-rendered'));
console.log('render status of reference plot at start: ' + $('#expression-plots').data('reference-rendered'));

$('.expression-plot').remove();
$('#render-target .tab-content').append("<%= escape_javascript(render partial: @top_plot_partial)%>");

// Ensure active tab doesn't get overwritten with default tab (SCP-780)
var activeViewTabId = $('#view-tabs .active').attr('id').replace('-nav', '');
$('.tab-pane.expression-plot').removeClass('active');
$('#' + activeViewTabId).addClass('active');

$('#box-controls, #scatter-plots').on('show.bs.collapse hide.bs.collapse', function() {
	toggleGlyph($(this).prev().find('span.toggle-glyph'));
});

<%= render partial: @top_plot_plotly %>

$('#expression-plots [data-toggle="tooltip"]').tooltip("destroy");
$('#expression-plots [data-toggle="tooltip"]').tooltip({container: 'body'});

// resize listener

$(window).on('resizeEnd', function() {

    if (typeof $('#box-plot')[0] === 'undefined') {
      return;
    }

    var newBoxWidth = $('#box-plot').actual('width');
    var newScatterSize = $('#scatter-plot').actual('width');
    var newReferenceSize = $('#reference-plot').actual('width');

    if (newBoxWidth < minPlotAreaWidth) {
      newBoxWidth = minPlotAreaWidth;
    }

    scatterLayout['width'] = newScatterSize;
    scatterLayout['height'] = newScatterSize;
    staticLayout['width'] = newReferenceSize;
    staticLayout['height'] = newReferenceSize;

    try {
      Plotly.relayout('box-plot', {width: newBoxWidth});
      Plotly.relayout('scatter-plot', scatterLayout);
      Plotly.relayout('reference-plot', staticLayout);
    } catch (e) {
      console.log('Abort resizeEnd')
    }
});

// attach click event for toggle switch
$('#toggle-traces').click(function() {
    togglePlotlyTraces('box-plot');
});


// monitor rendering for tests
$('#expression-plots').data('box-rendered', true);
$('#expression-plots').data('scatter-rendered', true);
$('#expression-plots').data('reference-rendered', true);

enableDefaultActions();
closeUserAnnotationsForm();

// check render status
console.log('render status of box plot at end: ' + $('#expression-plots').data('box-rendered'));
console.log('render status of scatter plot at end: ' + $('#expression-plots').data('scatter-rendered'));
console.log('render status of reference plot at end: ' + $('#expression-plots').data('reference-rendered'));

showRelatedGenesIdeogram();

var distributionPlotType = '<%= @values_box_type %>';
plotEvent.complete();

var requestUrl = '<%= javascript_safe_url(request.fullpath) %>';
gaTrack(requestUrl, 'Single Cell Portal');

<%= render partial: 'annotation_warning.js' %>
