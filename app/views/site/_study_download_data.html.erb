<%= render partial: 'study_download_agreement' if @study.has_download_agreement? %>

<div class="row">
  <div class="col-xs-12">
    <h2>Study Files
      <span class="badge"><%= @study_files.count %></span>
      <%= link_to "<i class='fas fa-question-circle'></i> Bulk download".html_safe, '#/', class: "btn btn-default pull-right #{!@allow_downloads ? 'disabled' : nil}", id: 'download-help' %>
    </h2>

    <% if @allow_downloads %>
    <div class="modal fade" id="download-help-modal" role="dialog" aria-labelledby="download-help-modal" aria-hidden="true">
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h2 class="text-center">Bulk Download</h2>
          </div>
          <div class="modal-body">
            <% if @study.has_bucket_access?(current_user) %>
            <p class="lead">To download all files using <code>gsutil</code>, run the following command:</p>
            <pre>gsutil -m cp -r gs://<%= @study.bucket_id %> [target path]</pre>
              <% if @directories.any? %>
                <p class="lead">To download all data files in a specific folder, use the following commands:</p>
                <table class="table table-condensed table-striped">
                  <thead>
                  <tr>
                    <th>Folder</th>
                    <th>gsutil command</th>
                  </tr>
                  <% @directories.each do |directory| %>
                      <tr>
                        <td><%= directory.name %></td>
                        <td><pre>gsutil -m cp gs://<%= @study.bucket_id %><%= directory.download_display_name %>*.<%= directory.file_type %>*<%= %> [target path]</pre></td>
                      </tr>
                  <% end %>
                  </thead>
                </table>
              <% end %>
              Then <%= link_to "click here".html_safe, "#{generate_manifest_study_url(@study)}" %> for the file_supplemental_info.tsv containing file supplementary information (units, protocols, etc...)
            <% elsif @study.public? && !@user_embargoed || current_user.admin? %>
              <p class="lead">To download all files using <code>curl</code>, click the button below to get the download command:</p>
              <p class="lead command-container text-center" id="command-container-all">
                <%= link_to "<i class='fas fa-download'></i> Download all study data".html_safe,
                            '#/', class: 'btn btn-default get-download-command', id: 'get-download-command__all' %></p>

              <% if @directories.any? %>
                <p class="lead command-container text-center" id="command-container-nodirs">
                  <%= link_to "<i class='fas fa-download'></i> Download main study files only".html_safe,
                              '#/', class: 'btn btn-default get-download-command', id: 'get-download-command__nodirs' %></p>
              <% end %>

              <% if @directories.any? %>
                <p class="lead">To download all data files in a specific folder, use the following commands:</p>
                <table class="table table-condensed table-striped">
                  <thead>
                    <tr>
                      <th>Folder</th>
                      <th>File Type</th>
                      <th>Download command</th>
                    </tr>
                    <% @directories.each do |directory| %>
                      <tr>
                        <td><%= directory.name %></td>
                        <td><%= directory.file_type %></td>
                        <td class="command-container" id="command-container-<%= directory.url_safe_name %>">
                          <%= link_to "<i class='fas fa-download'></i> Get download command".html_safe, '#/',
                                      class: 'btn btn-default get-download-command', id: "get-download-command__#{directory.url_safe_name}",
                                      data: {filetypes: 'None' } %>
                        </td>
                      </tr>
                    <% end %>
                  </thead>
                </table>
              <% end %>
            <% else %>
              <%# The user is trying to download a public study that is currently embargoed. %>
              <p class="lead">No downloads are available to you for this study yet</p>
            <% end %>
          </div>
          <div class="modal-footer">
            <button class="close" data-dismiss="modal">Ã—</button>
          </div>
        </div>
      </div>
    </div>

    <script type="text/javascript" nonce="<%= content_security_policy_script_nonce %>">
        $('#download-help').click(function() {
            $('#download-help-modal').modal('show');
        });

        // Enables copying to clipboard upon clicking a "clipboard" icon,
        // like on GitHub.  https://clipboardjs.com.
        var clipboard = new Clipboard('.btn-copy');
        clipboard.on('success', function(event) {
        $('#' + event.trigger.id)
          .attr('title', 'Copied!')
          .tooltip('fixTitle')
          .tooltip('show');
        });

        $('body').on('click', '.btn-refresh', function(event) {
          var commandContainer = $(this).parentsUntil('.command-container').parent();
          var downloadObject = commandContainer.attr('id').split('-').slice(-1)[0];
          var fileTypes = commandContainer.data('filetypes');
          writeDownloadCommand(downloadObject, fileTypes);
        });

        /**
         * Writes HTML containing curl command used to download public study data
         *
         * @param downloadObject {String} 'all' or a particular directory listing, e.g. 'csvs'
         */
        function writeDownloadCommand(downloadObject, fileTypes) {

          $('.tooltip').remove();

          // Get a time-based one time authentication token (totat),
          // then show the download command
          const fileIds = <%= @study.study_files.pluck(:_id).map(&:to_s).to_s.html_safe %>
          window.SCP.API.fetchAuthCode(fileIds, []).then(
            function (response) {
              var authCode = response.authCode;
              var timeInterval = response.timeInterval; // token expires after this many seconds
              var expiresMinutes = timeInterval / 60;
              const isWindows = !!window.navigator.platform.match(/Win/) // determine client OS for formatting
              const curlExec = isWindows ? 'curl.exe' : 'curl'
              const accession = "<%= @study.accession %>"
              const curlSecureFlag = "<%= Rails.env.development? ? '-k' : '' %>"
              const matcher = /root-dir/
              const downloadObjectName = downloadObject.match(matcher) ? downloadObject.replace(matcher, '%2F') : downloadObject
              // Gets a curl configuration ("cfg.txt") containing signed
              // URLs and output names for all files in the download object.
              var url = (
                window.location.origin +
                '/single_cell/api/v1/bulk_download/generate_curl_config?' +
                `accessions=${accession}` +
                `&auth_code=${authCode}` +
                `&directory=${downloadObjectName}` +
                `&context=study`
              );

              // if this is a single-directory download, append 'file_types=None' to exclude all other files from
              // bulk download request
              if ( typeof fileTypes !== 'undefined' ) {
                  url += `&file_types=${fileTypes}`
              }

              // This is what the user will run in their terminal to download the data.
              var downloadCommand = (
                  `${curlExec} &quot;${url}&quot; ${curlSecureFlag} -o cfg.txt; `
              );

              // depending on OS, format downstream commands to only clean up cfg.txt if curl is successful
              if (isWindows) {
                downloadCommand += `${curlExec} -K cfg.txt ; if ($?) { rm cfg.txt }`
              } else {
                downloadCommand += `${curlExec} -K cfg.txt && rm cfg.txt`
              }

              var commandID = 'command-' + authCode;
              var commandContainer = $('#command-container-' + downloadObject);
              var countdownValue = '<span class="countdown" id="countdown-' + authCode + '">' + expiresMinutes + '</span>';

              commandContainer.html(
                  '<div class="input-group">' +
                  '<input id="' + commandID + '" class="form-control curl-download-command" value="' + downloadCommand + '" readonly/>' +
                  '<span class="input-group-btn">' +
                  '<button id="copy-button-' + authCode + '" class="btn btn-default btn-copy" data-clipboard-target="#' + commandID + '" data-toggle="tooltip" title="Copy to clipboard">' +
                  '<i class="far fa-copy"></i>' +
                  '</button>' +
                  '<button id="refresh-button-' + authCode + '" class="btn btn-default btn-refresh glyphicon glyphicon-refresh" data-toggle="tooltip" style="top: -0.5px;" title="Refresh download command">' +
                  '</button>' +
                  '</span>' +
                  '</div>' +
                  '<div style="font-size: 16px">Valid for one use within ' + countdownValue + ' minutes.  Paste into Mac/Linux/Unix terminal and execute to download.<br/><br/>' +
                  'If a certificate validation error occurs, adding the "-k" option will skip certificate validation.<br/>  e.g. `curl -k "https://singlecell...."`</div>'
              );
            }
          );
        }

        // Show the download command upon clicking the "Get download command" button
        $('body').on('click', '.get-download-command', function(event) {
          var downloadButton = $(this);
          var downloadObject = downloadButton.attr('id').split('__').slice(-1)[0];
          var fileTypes = downloadButton.data('filetypes');
          writeDownloadCommand(downloadObject, fileTypes);
        });
    </script>
    <% end %>
  </div>
</div>
<div class="table-responsive">
  <table class="table table-striped table-condensed">
    <thead>
    <tr>
      <th class="col-sm-4">Filename</th>
      <th class="col-sm-4">Description</th>
      <th class="col-sm-2">Species/Assembly</th>
      <th class="col-sm-1">Browse</th>
      <th class="col-sm-1">Download</th>
    </tr>
    </thead>
    <tbody>
    <% @study_files.each do |study_file| %>
      <tr>
        <td><%= study_file.upload_file_name.nil? ? study_file.name : study_file.upload_file_name %> <%= study_file.file_type == 'Cluster' ? "<strong>(#{study_file.name})</strong>".html_safe : nil %></td>
        <td><%= study_file.description %></td>
        <td>
          <% if study_file.taxon.present? %>
            <%= study_file.species_name %> <%= study_file.genome_assembly.present? ? " (#{study_file.genome_assembly_name})" : nil %>
          <% end %>
        </td>
        <td>
          <% if study_file.file_type == 'BAM' && study_file.has_completed_bundle? %>
            <%= render partial: '/site/genome/browse_igv_link', locals: {study_file: study_file} %>
          <% end %>
        </td>
        <td>
          <% if @allow_downloads && @allow_firecloud_access %>
            <%= render partial: '/layouts/download_link', locals: {study: @study, study_file: study_file} %>
          <% else %>
            <%= link_to 'Currently Unavailable', '#/', class: 'btn btn-danger disabled-download', disabled: true %>
          <% end %>
        </td>
      </tr>
    <% end %>
      <tr>
        <td>file_supplemental_info.tsv <i>(auto-generated)</i></td>
        <td>Listing of all study files, and any supplementary information (units, protocols, etc...)</td>
        <td></td>
        <td></td>
        <td><%= link_to "<span class='fas fa-download'></span> 1 KB".html_safe, "#{generate_manifest_study_url(@study)}", class: "btn btn-primary dl-link" %>
        </td>
      </tr>
    </tbody>
  </table>
  <% if @primary_study_files.any? || @primary_data.any? %>
    <div class="well well-sm">
      <h2>Sequence Data <span class="badge"><%= @study.primary_data_file_count %></span> </h2>
      <table class="table table-striped tabled-condensed study-data-table" id="fastq-table">
        <thead>
        <tr>
          <th class="col-sm-4">Filename</th>
          <th class="col-sm-4">Description</th>
          <th class="col-sm-2">Species/Assembly</th>
          <th class="col-sm-1">Browse</th>
          <th class="col-sm-1">Download</th>
        </tr>
        </thead>
        <tbody id="fastq-files-target">
          <% @primary_study_files.each do |file| %>
            <tr>
              <td><%= file.name %></td>
              <td><%= file.description %></td>
              <td>
                <% if file.taxon.present? %>
                  <%= file.species_name %> <%= file.genome_assembly.present? ? " (#{file.genome_assembly_name})" : nil %>
                <% end %>
              </td>
              <td>
                <% if file.file_type == 'BAM' && file.has_completed_bundle? %>
                  <%= render partial: '/site/genome/browse_igv_link', locals: {study_file: file} %>
                <% end %>
              </td>
              <td>
                <% if @allow_downloads %>
                  <%= render partial: '/layouts/download_link', locals: {study: @study, study_file: file} %>
                <% else %>
                  <%= link_to 'Currently Unavailable', '#/', class: 'btn btn-danger disabled-download', disabled: true %>
                <% end %>
              </td>
            </tr>
          <% end %>
          <% @primary_data.each do |directory| %>
            <% directory.files.each do |file| %>
              <% basename = file[:name].split('/').last %>
              <tr>
                <td><%= file[:name] %></td>
                <td><%= directory.description %></td>
                <td><%= directory.species_name %></td>
                <td>
                  <% if directory.file_type == 'BAM' %>
                    <%= render partial: '/site/genome/browse_igv_link', locals: {study_file: file} %>
                  <% end %>
                </td>
                <td><%= link_to("<span class='fas fa-download'></span> #{number_to_human_size(file[:size], prefix: :si)}".html_safe, directory.download_path(file[:name]), class: "btn btn-primary dl-link fastq", data: {filename: basename}) %></td>
              </tr>
            <% end %>
          <% end %>
        </tbody>
      </table>
    </div>
  <% end %>
  <% if @other_data.any? %>
    <div class="well well-sm">
      <h2>Other Data <span class="badge"><%= @study.misc_directory_file_count %></span> </h2>
      <table class="table table-striped tabled-condensed study-data-table" id="other-data-table">
        <thead>
        <tr>
          <th class="col-sm-3">Filename</th>
          <th class="col-sm-2">Type</th>
          <th class="col-sm-5">Description</th>
          <th class="col-sm-1">Download</th>
        </tr>
        </thead>
        <tbody>
        <% @other_data.each do |directory| %>
          <% directory.files.each do |file| %>
            <% basename = file[:name].split('/').last %>
            <tr>
              <td><%= basename %></td>
              <td><%= directory.file_type %></td>
              <td><%= directory.description %></td>
              <td><%= link_to("<span class='fas fa-download'></span> #{number_to_human_size(file[:size], prefix: :si)}".html_safe, directory.download_path(file[:name]), class: "btn btn-primary dl-link fastq", download: basename) %></td>
            </tr>
          <% end %>
        <% end %>
        </tbody>
      </table>
    </div>
  <% end %>
</div>

<script type="text/javascript" nonce="<%= content_security_policy_script_nonce %>">

    var hasAgreement = <%= @study.has_download_agreement? %>;
    var userHasAccepted = <%= @study.has_download_agreement? ? @user_accepted_agreement : false %>;
    if (hasAgreement && !userHasAccepted) {
        setElementsEnabled($('.dl-link'), false)
        setElementsEnabled($('#download-help'), false)
    }

    $('#fastq-table').dataTable({
        pagingType: 'full',
        order: [[0, 'asc']],
        autoWidth: false
    });

    $('#other-data-table').dataTable({
        pagingType: 'full',
        order: [[1, 'asc'],[0, 'asc']],
        autoWidth: false
    });

</script>
