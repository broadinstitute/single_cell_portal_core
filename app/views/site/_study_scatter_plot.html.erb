var data = [];
<% @coordinates.sort_by {|k,v| k}.each_with_index do |(cluster, data), index| %>
  var cluster_<%= index %> = {
    x: <%= raw data[:x] %>,
    y: <%= raw data[:y] %>,
    cells: <%= raw data[:cells] %>,
    <% if !data[:annotations].nil? %>
      annotations: <%= raw data[:annotations] %>,
    <% end %>
    <% if @cluster.is_3d? %>
      z: <%= raw data[:z] %>,
      textposition: 'bottom right',
    <% end %>
    text: <%= raw data[:text] %>,
    name: "<%= data[:name] %>",
    mode: 'markers',
    type: '<%= @plot_type %>',
    opacity: <%= @study.default_cluster_point_alpha %>,
    marker: <%= raw data[:marker].to_json %>
  };

  <% if @selected_annotation[:type] == 'group' %>
    // set color
    cluster_<%= index %>['marker']['color'] = colorBrewerSet[<%= index %> % 27];
  <% end %>

  data.push(cluster_<%= index %>);
<% end %>

// use partial for layouts to avoid code duplication
<%= render 'study_scatter_layout' %>

Plotly.newPlot('cluster-plot', data, layout);

// listener to redraw expression scatter with new color profile
$('#colorscale').off('change');
$("#colorscale").change(function() {

    var theme = $(this).val();
    data[0].marker.colorscale = theme;
    console.log("setting colorscale to " + theme);

    $('#search_colorscale').val(theme);
    Plotly.update('cluster-plot', data, layout);
});

$('#cluster-figure-legend').html("<p class='text-center help-block'><%= escape_javascript(render plain: @cluster.study_file.description) %></p>");

// access actual target div, not jQuery object wrapper for relayout event
var clusterPlotDiv = document.getElementById('cluster-plot');
clusterPlotDiv.on('plotly_relayout', function(cameraData) {
  if (typeof cameraData['scene.camera'] !== 'undefined') {
    var oldScene = $('#expression-plots').data('scatter-camera');
    var newCamera = cameraData['scene.camera'];
    console.log('Updating camera information; was ' + JSON.stringify(oldScene));
    $('#cluster-plot').data('camera', newCamera);
    console.log('Update complete, camera data now ' + JSON.stringify($('#cluster-plot').data('camera')));
  }
});

