<div class="row">
  <div class="col-md-2" id="search-target">
    <%= render partial: 'search_options' %>
  </div>
  <div class="col-md-13" id="render-target">
    <div class="row-offcanvas row-offcanvas-right">
      <div id="view-options-nav"><a href="#view-options" id="view-option-link" data-toggle="offcanvas"><i class="fas fa-cog" aria-hidden="true"></i> View Options </a></div>
      <ul class="nav nav-tabs" role="tablist" id="view-tabs" data-analytics-name="explore-multiple-genes">
        <li role="presentation" class="study-nav active" id="dot-tab-nav"><a href="#dot-plots-tab" data-toggle="tab">Dot Plot </a></li>
        <li role="presentation" class="study-nav" id="plots-tab-nav"><a href="#plots-tab" data-toggle="tab">Heatmap </a></li>
        <% if @study.has_bam_files? %>
          <li role="presentation" class="study-nav" id="genome-tab-nav">
            <a href="#genome-tab" data-toggle="tab">Genome </a>
          </li>
        <% end %>
      </ul>
      <%= render partial: 'view_options' %>
      <div class="tab-content">
        <div class="tab-pane active" id="dot-plots-tab" role="tabpanel">
          <div class="panel panel-default no-top-border">
            <div id="dot-plots" class="panel-collapse collapse in">
              <div class="panel-body">
                <div class="col-md-12">
                  <%= render partial: 'morpheus_help' %>
                  <div id="dot-plot"></div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="tab-pane" id="plots-tab" role="tabpanel">
          <div class="panel panel-default no-top-border">
            <div id="plots" class="panel-collapse collapse in">
              <div class="panel-body">
                <div class="col-md-12">
                  <%= render partial: 'morpheus_help' %>
                  <div id="heatmap-plot"></div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <% if @study.has_bam_files? %>
          <div class="tab-pane" id="genome-tab" role="tabpanel">
            <div class="panel panel-default no-top-border">
              <div id="genome-container" class="panel-collapse collapse in"></div>
              <%= render partial: '/site/genome/genome' %>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript" nonce="<%= content_security_policy_script_nonce %>">

    // monitor status of rendering plots for tests
    $('#heatmap-plot').data('rendered', false);
    $('#dot-plot').data('rendered', false);
    function drawHeatmap(height) {
        $(window).off('resizeEnd');
        // clear out previous stored heatmap object
        $('#heatmap-plot').data('heatmap', null);
        $('#dot-plot').data('heatmap', null);
        // if height isn't specified, pull from stored value, defaults to 500
        if (height === undefined) {
            height = $('#heatmap-plot').data('height');
        }
        // pull fit type as well, defaults to ''
        var fit = $('#heatmap-plot').data('fit');

        var dataPath = '<%= javascript_safe_url(expression_query_path(accession: params[:accession], study_name: params[:study_name], search: {genes: @gene_list })) %>';
        var heatmap_row_centering = $('#heatmap_row_centering').val();
        var selectedAnnot = $('#annotation').val();
        var annotName = selectedAnnot.split('--')[0];
        var annotType = selectedAnnot.split('--')[1];
        dataPath += '&row_centered=' + heatmap_row_centering;
        var cluster = $('#cluster').val();
        $("#search_cluster").val(cluster);
        $('#search_annotation').val(''); // clear value first
        $("#search_annotation").val(selectedAnnot);
        var requestToken = '<%= user_signed_in? ? current_user.id.to_s + ':' + current_user.authentication_token : nil %>';
        dataPath += '&cluster=' + encodeURIComponent(cluster) + '&request_user_token=' + requestToken;
        var newAnnotPath = '<%= annotation_query_path(accession: params[:accession], study_name: params[:study_name]) %>?cluster=' + encodeURIComponent(cluster) + '&annotation=' + encodeURIComponent(selectedAnnot) + '&request_user_token=' + requestToken;
        var colorScalingMode = 'relative';
        // determine whether to scale row colors globally or by row
        if (heatmap_row_centering !== '') {
            colorScalingMode = 'fixed';
        }

        // log action of rendering Morpheus
        var logUrl = '<%= javascript_safe_url(expression_query_path(accession: params[:accession], study_name: params[:study_name], search: {genes: @gene_list })) %>';
        logUrl += '--cluster=' + cluster + '--annotation=' + annotName;
        $.ajax({
            url: '<%= log_action_path %>?url_string=' + logUrl,
            dataType: 'script'
        });

        var renderUrlParams = getRenderUrlParams();
        // get annotation values to set color values in Morpheus and draw heatmap in callback
        $.ajax({
            url: '<%= annotation_values_path(accession: @study.accession, study_name: @study.url_safe_name) %>?' + renderUrlParams,
            dataType: 'JSON',
            success: function(annotations) {
                renderMorpheus(dataPath, newAnnotPath, annotName, annotType, '#heatmap-plot', annotations, fit, height, colorScalingMode);
                renderMorpheusDotPlot(dataPath, newAnnotPath, annotName, annotType, '#dot-plot', annotations, fit, height);
            }
        });
    }

    <%= render partial: 'annotation_warning.js' %>
    // change the annotation dropdown if value was invalid as this is what gets passed to Morpheus
    if (showAlert) {
        $('#annotation').val(loadedAnnotation)
    }

    $(document).ready(function() {
        $('#heatmap-plot').data('fit', '');
        $('#heatmap-plot').data('height', 500);
        $('#dot-plot').data('fit', '');
        $('#dot-plot').data('height', 500);

        drawHeatmap();
    });

    // Ensures heat map row labels are not truncated
    $('#plots-tab-nav').on('click', function() {
      setTimeout(function() {
        // Without this timeout kludge, this fix doesn't work when
        // View Options is expanded *then* "Heatmap" tab is clicked.
        $(window).trigger('resize');
      }, 25);
    })

    $("#heatmap_row_centering, #annotation").change(function() {
        $('#heatmap-plot').data('rendered', false);
        if ($(this).attr('id') == 'annotation') {
            var an = $(this).val();
            // keep track for search purposes
            $('#search_annotation').val(an);
            $('#gene_set_annotation').val(an);
        }
        drawHeatmap();
    });
    // when changing cluster, re-render annotation options and call render function
    $("#cluster").change(function(){
        $('#heatmap-plot').data('rendered', false);
        $('#dot-plot').data('rendered', false);

        var newCluster = $(this).val();
        // keep track for search purposes
        $('#search_cluster').val(newCluster);
        $('#gene_set_cluster').val(newCluster);
        var currAnnot = $('#annotation').val();
        // get new annotation options and re-render
        $.ajax({
            url: "<%= get_new_annotations_path(study: params[:study])%>?cluster=" + newCluster,
            method: 'GET',
            dataType: 'script',
            complete: function (jqXHR, textStatus) {
                renderWithNewCluster(textStatus, drawHeatmap);
            }
        });
    });

    $('#resize-heatmap').click(function() {
        $('#heatmap-plot').data('rendered', false);
        $('#dot-plot').data('rendered', false);

        var newHeight = parseInt($('#heatmap_size').val());
        $("#heatmap-plot").data('height', newHeight);
        console.log('resizing heatmap to ' + newHeight);
        drawHeatmap(newHeight);
    });

    $('.fit-btn').click(function() {
        $('#heatmap-plot').data('rendered', false);
        $('#dot-plot').data('rendered', false);

        var btn = $(this);
        var btnState = btn.data('active');
        var newState = btnState === 'on' ? 'off' : 'on';
        btn.data('active', newState);
        var fitType = btn.data('fit');
        console.log('setting fit type: ' + fitType + 'to ' + newState);

        btn.toggleClass('active');
        currFit = $('#heatmap-plot').data('fit');
        // determine state and set appropriately
        if (newState == 'on') {
            if (currFit !== '' && fitType !== currFit) {
                fitType = 'both'
            }
        } else {
            if (currFit === 'both') {
                fitType = fitType === 'rows' ? 'cols' : 'rows';
            } else {
                fitType = '';
            }
        }

        $('#heatmap-plot').data('fit', fitType);
        $('#dot-plot').data('fit', fitType);
        drawHeatmap();
    });
</script>
