name: 'Pull gcloud container and activate service account'
description: 'Pulls gcloud Docker image and activates the requested service account to use in calling gcloud'
inputs:
  vault_secret_path:
    description: 'Path to service account in vault'
    required: true
  gcloud_docker_image:
    description: 'gcloud Docker image name/vesion tag'
    required: false
    default: 'gcr.io/google.com/cloudsdktool/google-cloud-cli:latest'
  container_name:
    description: 'name of container to create and access volumes from'
    required: false
    default: 'gcloud-config'
  vault_addr:
    description: 'vault API endpoint'
    required: true
  vault_role_id:
    description: 'vault role for accessing secrets'
    required: true
  vault_secret_id:
    description: 'credential to authenticate into vault'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Install vault
      uses: ./.github/actions/install-vault-and-utils
    - name: Download gcloud Docker image
      shell: bash
      run: |
        docker pull ${{ inputs.gcloud_docker_image }}
    - name: Authenticate to gcloud and docker
      env:
        VAULT_ADDR: ${{ inputs.VAULT_ADDR }}
        SERVICE_ACCOUNT_PATH: '/tmp/scp_service_account.json'
      shell: bash
      run: |
        # this will create a Docker volume called 'gcloud-config' that contains credentials for use with gcloud
        export VAULT_TOKEN=$( vault write -field=token auth/approle/login role_id=${{ inputs.vault_role_id }} secret_id=${{ inputs.vault_secret_id }})
        vault read -format=json ${{ inputs.vault_secret_path }} | jq .data > $SERVICE_ACCOUNT_PATH
        docker run -v "$SERVICE_ACCOUNT_PATH:$SERVICE_ACCOUNT_PATH" --name ${{ inputs.container_name }} ${{ inputs.gcloud_docker_image }} gcloud \
               auth activate-service-account --key-file=$SERVICE_ACCOUNT_PATH
