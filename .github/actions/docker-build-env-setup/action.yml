name: 'Docker Build Env Setup'
description: 'Installs vault and runs docker build during CI, incorporating changes as necessary'
outputs:
  docker-tag:
    description: 'Tag for locally built Docker image'
    value: ${{ steps.build-test-image.outputs.docker-tag }}
runs:
  using: 'composite'
  steps:
    - name: Install vault and other utilities
      uses: ./.github/actions/install-vault-and-utils
    - name: Detect changes to Dockerfile
      id: changed-dockerfile
      uses: tj-actions/changed-files@v35.4.4
      with:
        files: Dockerfile
    - name: Rebuild local image if Dockerfile changed
      shell: bash
      if: steps.changed-dockerfile.outputs.any_changed == 'true'
      run: |
        # the previous step uses the changed-files action to detect if the Dockerfile has any updates
        # this will require rebuilding the image locally as the downstream "test" image will fail otherwise
        # see https://github.com/marketplace/actions/changed-files for more info on this action
        echo "#### CHANGES DETECTED TO DOCKERFILE, REBUILDING IMAGE LOCALLY ####"
        docker build -t $DOCKER_IMAGE_NAME:development -f Dockerfile .
    - name: Build test docker image
      id: build-test-image
      shell: bash
      run: |
        # The "broad-singlecellportal-staging" GCR repository is used in production.
        # The "development" tag is used in non-production deployment.  For production deployment, tag is version number for
        # upcoming release, e.g. 1.20.0.
        # More context: https://github.com/broadinstitute/single_cell_portal_core/pull/1552#discussion_r910424433
        # TODO: (SCP-4496): Move production-related GCR images out of staging project
        # add ci- prefix to avoid post-merge build failing due to missing GITHUB_HEAD_REF
        # and strip any slashes from GITHUB_HEAD_REF to avoid 'invalid reference format' error with tag
        # this will happen on dependabot PRs
        SAFE_HEAD_REF=$(echo $GITHUB_HEAD_REF | sed -e 's/\//_/g')
        DOCKER_IMAGE_TAG="ci-$SAFE_HEAD_REF-$GITHUB_SHA"
        # output Docker tag for use downstream
        echo "docker-tag=$DOCKER_IMAGE_TAG" >> $GITHUB_OUTPUT
        docker build -t $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG -f test/Dockerfile-test .
