name: Terra Orchestration API Smoke Test
on:
  push:
    branches:
      - jb-slack-notify-ci-job
  schedule:
    - cron: "0 8 * * 1,3,5"
env:
  DOCKER_IMAGE_NAME: "gcr.io/broad-singlecellportal-staging/single-cell-portal"

jobs:
  Run-Orch-Smoketest:
    runs-on: self-hosted

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Build image and setup env
        id: build-image-setup-env
        uses: ./.github/actions/docker-build-env-setup
      - name: Load secrets and run tests
        id: run-smoke-test
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
          VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
          DOCKER_IMAGE_TAG: ${{ steps.build-image-setup-env.outputs.docker-tag }}
          ORCH_SMOKE_TEST: true
          CI: true
        run: |
          exit 1 # manual testing for faster iteration
#          export VAULT_TOKEN=$( vault write -field=token auth/approle/login role_id=$VAULT_ROLE_ID secret_id=$VAULT_SECRET_ID )
#          bin/load_env_secrets.sh -p secret/kdux/scp/staging/scp_config.json \
#                                  -s secret/kdux/scp/staging/scp_service_account.json \
#                                  -e test -v $DOCKER_IMAGE_TAG -n single-cell-portal-test \
#                                  -c bin/run_orch_smoke_test.sh
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Set Slack message content
        id: slack-message
        run: |
          if ${{ steps.run-smoke-test.outcome == 'failure' }}; then
            echo "::set-output name=message::@channel :x Orchestration smoke test ${{ steps.date.outputs.date }}: ${{ job.status }}"
          else
            echo "::set-output name=message:::green_check_mark Orchestration smoke test ${{ steps.date.outputs.date }}: ${{ job.status }}"
          fi
      - name: Notify Slack
        id: slack-notify
        uses: slackapi/slack-github-action@v1.24.0
        if: always()
        with:
          channel-id: "C05JHJ0UA1M" #scp-alerts
          payload: |
            {
              "blocks": [
                { 
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ steps.slack-message.outputs.message }} \nhttps://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACKBOT_TOKEN }}
      - name: Preserve all test logs
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-logs
          path: |
            log/test.log
